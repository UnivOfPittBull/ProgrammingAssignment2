{
    "contents" : "## This file is to satisfy Data Science Coursera Programming Assignment 2\n## The functions will cache the inverse of a matrix\n\n## makeCacheMatrix creates a function that can cache its inverse\n\nmakeCacheMatrix <- function(x = matrix()) {\n      m <- NULL\n      set <- function(y) {\n            x <<- y\n            m <<- NULL\n      }\n      get <- function() x\n      setinv <- function(solve) m <<- solve\n      getinv <- function() m\n      list(set = set, get = get,\n           setinv = setinv,\n           getinv = getinv)\n\n}\n\n\n## cacheSolve computes the inverse of a matrix returned by makeCacheMarix.\n## if the inverse has already been calculate, cacheSolve will retrieve it\n## from the cache.\n\ncacheSolve <- function(x, ...) {\n        ## Return a matrix that is the inverse of 'x'\n      m <- x$getinv()\n      if(!is.null(m)) {\n            message(\"getting cached data\")\n            return(m)\n      }\n      data <- x$get()\n      m <- solve(data, ...)\n      x$setinv(m)\n      m\n}\n",
    "created" : 1458489384981.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "4088439465",
    "id" : "19CA2D06",
    "lastKnownWriteTime" : 1458491537,
    "path" : "C:/Users/KGross/ProgrammingAssignment2/cachematrix.R",
    "project_path" : "cachematrix.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : true,
    "type" : "r_source"
}